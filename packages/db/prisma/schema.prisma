// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(uuid())
  email     String  @unique
  password  String
  name      String
  photo     String?
  rooms     Room[]
  chats     Chat[]
  participatingRooms RoomParticipants[]
}

model Room {
  id           Int        @id @default(autoincrement())
  name         String?
  createdAt    DateTime   @default(now())
  adminId      String
  admin        User        @relation(fields: [adminId], references: [id])
  chats        Chat[]
  participants RoomParticipants[]
}

model RoomParticipants{
  id       Int    @id @default(autoincrement())
  roomId   Int
  userId   String
  room     Room   @relation(fields: [roomId], references: [id])
  user     User   @relation(fields: [userId], references: [id])
  joinedAt DateTime @default(now())

  @@unique([roomId, userId])
}

model Chat{
  id        Int       @id @default(autoincrement())
  message   String 
  userId    String
  like      Int?       @default(0)
  roomId    Int
  room      Room      @relation(fields: [roomId], references: [id])
  user      User       @relation(fields: [userId], references: [id])
}